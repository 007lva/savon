= Savon

Savon is a lightweight SOAP client.

Instantiate Savon::Service and pass in the WSDL of the service you would
like to use. Then just call the SOAP service method on your Savon::Service
instance (catched via method_missing) and pass in a Hash of options for the
service method to receive.

== Install

  $ gem install smacks-savon --s http://gems.github.com

== Dependencies

  hpricot 0.6.164 (also available for JRuby)
  smacks-apricoteatsgorilla >= 0.3.31

== How to use

=== Usage example

  proxy = Savon::Service.new "http://example.com/ExampleService?wsdl"
  response = proxy.findExampleById(:id => 123)

=== Check for available SOAP service methods

  proxy.wsdl.service_methods
  # => [ "findExampleById", "findExampleByName" ]

=== Checking for HTTP and SOAP faults

  response.success?
  response.fault?

=== Access the fault message and code

  response.fault
  response.fault_code

=== Working with different response formats

  # raw XML response:
  response.to_s

  # response as a Hash
  response.to_hash

  # response as a Hash starting at a custom root node (via XPath)
  response.to_hash("//item")

  # response as a Mash
  response.to_mash

  # response as a Mash starting at a custom root node (via XPath)
  response.to_mash("//user/email")