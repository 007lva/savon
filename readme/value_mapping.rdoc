Of course both SOAP request and response are pure XML. Even though (assuming your XML applies to some defaults), Savon lets you specify the SOAP header and body as a Hash as well as returning the [[Response]] as a Hash.

== SOAP header and body

Some Hash keys and values passed to [[SOAP]] header and body are converted to SOAP compatible values automatically.

* Hash keys specified as Symbols are converted to lowerCamelCase Strings
* Hash keys specified as Strings are not converted and may contain namespaces
* DateTime Hash values are converted to xs:dateTime Strings
* Objects respond to to_datetime (except Strings) are converted to xs:dateTime Strings
* TrueClass and FalseClass objects are converted to "true" and "false"
* All other objects are expected to be converted to Strings using to_s

Example:

  date = DateTime.new 2010, 11, 22, 11, 22, 33
  response = client.user_magic do |soap|
    soap.body = {
      :magic_request => {
        :perform_move => true,
        "perform_at" => date
      }
    }
  end

Request:

  <env:Envelope
      xmlns:wsdl="http://ws.user.example.com"
      xmlns:env="http://schemas.xmlsoap.org/soap/envelope/">
    <env:Header></env:Header>
    <env:Body>
      <wsdl:userMagic>
        <magicRequest>
          <performMove>true</performMove>
          <perform_at>2012-06-11T10:42:21</perform_at>
        </magicRequest>
      </wsdl:userMagic>
    </env:Body>
  </env:Envelope>

== SOAP response as a Hash

When translating the SOAP response to a Hash, some XML nodes and values are converted to more convenient Ruby objects. Translation is done using John Nunemaker's {Crack}[http://github.com/jnunemaker/crack] library. Afterward, Savon does some extra mapping.

* Hash keys get converted to snake_case Symbols and namespaces are stripped off
* SOAP nil values are converted to nil
* Hash values specified in xs:DateTime format are converted to DateTime objects
* Hash values of "true" and "false" are converted to TrueClass and FalseClass
